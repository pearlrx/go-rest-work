basePath: /
definitions:
  models.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.Task:
    properties:
      createdAt:
        type: string
      endTime:
        type: string
      hours:
        type: integer
      id:
        type: integer
      minutes:
        type: integer
      name:
        type: string
      startTime:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  models.User:
    properties:
      address:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      passportNumber:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample server for a user and task management system.
  title: Test Project API
  version: "1.0"
paths:
  /tasks/start:
    post:
      consumes:
      - application/json
      description: Create a new task for a user
      parameters:
      - description: Task information
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Start a new task
      tags:
      - tasks
  /tasks/stop:
    post:
      consumes:
      - application/json
      description: Stop a task and calculate duration
      parameters:
      - description: Task information
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Stop a task
      tags:
      - tasks
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of users with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Results per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with passport information
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user
      tags:
      - users
  /users/{id}/tasks:
    get:
      consumes:
      - application/json
      description: Get tasks based on user ID and optional date range
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Start date (YYYY-MM-DD)
        in: query
        name: startTime
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: endTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get tasks for a user
      tags:
      - tasks
swagger: "2.0"
